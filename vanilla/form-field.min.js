var L=new CSSStyleSheet;L.replaceSync("form-field { display: var(--form-field-display, contents) }");var q=`<label class="container">
<slot class="field-label" name="field-label"></slot>
<slot class="prefix" name="prefix"></slot>
<slot class="light"></slot>
<slot class="postfix" name="postfix"></slot>
</label>`,C=`<div class="container">
<slot class="field-label" name="field-label"></slot>
<label class="option">
    <slot class="prefix" name="prefix"></slot>
    <slot class="light"></slot>
    <slot class="postfix" name="postfix"></slot>
    <span class="label"></span>
</label>
</div>`,A="form-field",E=class p extends HTMLElement{static parser=new DOMParser;static singleTemplateDOM;static groupTemplateDOM;constructor(){super()}renderIntoTemplate(){if(this.hasAttribute("initialized"))return;let l=this.getAttribute("input-selector")||"input,select,textarea",m=[...this.querySelectorAll(l)].filter(s=>!s.classList.contains("enabled-checkbox")),a=this.querySelector('[slot="field-label"]');a?.remove();let e=this.querySelector('[slot="prefix"]');e?.remove();let t=this.querySelector('[slot="postfix"]');if(t?.remove(),m.length>1){p.groupTemplateDOM==null&&(p.groupTemplateDOM=p.parser.parseFromString(C,"text/html"));let s=[...this.querySelectorAll(l)],i=[...this.querySelectorAll(`:scope > :not(${l})`)];this.innerHTML="",this.classList.add("group");let d=p.groupTemplateDOM.querySelector(".container").cloneNode(!0);this.append(d);let f=this.querySelector(".container"),o=this.querySelector(".option");o.remove();for(let u=0;u<s.length;u++){let y=o.cloneNode(!0);f.append(y);let T=this.querySelector(".light"),M=this.getLabel(s[u]);if(T.parentElement.querySelector(".label").textContent=M,e!=null){let g=[...this.querySelectorAll(".prefix")];for(let b=0;b<g.length;b++){let S=g[b],x=e.cloneNode(!0);x.classList.add("prefix"),S.parentElement.replaceChild(x,S)}}if(T.parentElement.replaceChild(s[u],T),t!=null){let g=[...this.querySelectorAll(".postfix")];for(let b=0;b<g.length;b++){let S=g[b],x=t.cloneNode(!0);x.classList.add("postfix"),S.parentElement.replaceChild(x,S)}}}this.append(...i)}else{p.singleTemplateDOM==null&&(p.singleTemplateDOM=p.parser.parseFromString(q,"text/html"));let s=p.singleTemplateDOM.querySelector(".container"),i=this.querySelector(l);if(i==null&&(i=document.createElement("input"),i.placeholder=this.getAttribute("placeholder")??"",i.value=this.getAttribute("value")??"",i.name=this.getAttribute("name")??""),i!=null){let c=[...this.querySelectorAll(`:scope > :not(${l})`)];this.append(s.cloneNode(!0));let d=this.querySelector(".postfix"),f=this.querySelector(".prefix"),o=this.querySelector(".light");e!=null&&f!=null&&(e.classList.add("prefix"),f.parentElement.replaceChild(e,f)),o.parentElement.replaceChild(i,o),t!=null&&d!=null&&(t.classList.add("postfix"),d.parentElement.replaceChild(t,d)),this.append(...c)}}let n=this.querySelector(".field-label");if(a!=null&&n!=null)a.classList.add("field-label"),n.parentElement.replaceChild(a,n);else if(n!=null){let s=document.createElement("span");s.classList.add("field-label"),n?.replaceWith(s)}let r=this.getAttribute("label"),h=this.querySelector(".field-label");if(h!=null&&r!=null)if(this.hasAttribute("optional")){let s=this.getAttribute("optional-title"),i=[...this.querySelectorAll(l)],c=document.createElement("input");c.type="checkbox",c.classList.add("enabled-checkbox"),s!=null&&c.setAttribute("title",s),c.addEventListener("change",()=>{this.setAttribute("optional-value",c.checked==!0?"true":"false");for(let o=0;o<i.length;o++){let u=i[o];c.checked==!0?u.removeAttribute("disabled"):u.toggleAttribute("disabled",!0)}});let d=document.createElement("span");d.textContent=r,h.append(c,d);let f=this.getAttribute("optional-value")=="true";c.checked=f;for(let o=0;o<i.length;o++){let u=i[o];c.checked==!0?u.removeAttribute("disabled"):u.setAttribute("disabled","disabled")}}else h.textContent=r;this.toggleAttribute("initialized",!0)}getLabel(l){if(l.dataset.label!=null)return l.dataset.label;let m=l.getAttribute("value")??"";return p.toTitleCase(m)}static toTitleCase(l){return l.substring(0,1).toUpperCase()+l.replace(/([A-Z]+)/g," $1").replace(/-([A-Za-z])/g," $1").replace(/([A-Z][a-z])/g," $1").replace(/ ([a-z])/g,m=>`${m.toUpperCase()}`).substring(1).trim()}static observedAttributes=["label","value","placeholder","name","optional-value","disabled"];attributeChangedCallback(l,m,a){if(l=="label"){let e=this.querySelector(".field-label");e!=null&&(e.textContent=a)}else if(l=="value"){let e=this.getAttribute("input-selector")||"input,select,textarea",t=[...this.querySelectorAll(e)];if(t.length>1||t.length==1&&t[0].classList.contains("enabled-checkbox"))return;t[0].value=a}else if(l=="optional-value"){let e=this.querySelector(".enabled-checkbox"),t=a=="true";e!=null&&(e.checked=t)}else if(l=="disabled"){let e=a!=null,t=this.getAttribute("input-selector")||"input,select,textarea",n=[...this.querySelectorAll(t)];for(let h=0;h<n.length;h++){let s=n[h];s.classList.contains("enabled-checkbox")||(e?s.toggleAttribute("disabled",!0):s.removeAttribute("disabled"))}let r=this.querySelector(".enabled-checkbox");r!=null&&(r.checked=!e)}else if(l=="placeholder"){let e=this.getAttribute("input-selector")||"input,select,textarea",t=[...this.querySelectorAll(e)];for(let n=0;n<t.length;n++){let r=t[n];r.classList.contains("enabled-checkbox")||(r.placeholder=a)}}else if(l=="name"){let e=this.getAttribute("input-selector")||"input,select,textarea",t=[...this.querySelectorAll(e)];for(let n=0;n<t.length;n++){let r=t[n];r.classList.contains("enabled-checkbox")||(r.name=a)}}}connectedCallback(){this.getRootNode().adoptedStyleSheets.push(L),this.renderIntoTemplate()}};customElements.get(A)==null&&customElements.define(A,E);export{E as FormFieldElement};
