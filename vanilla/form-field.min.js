var E=new CSSStyleSheet;E.replaceSync("form-field { display: var(--form-field-display, contents) }");var M=`<label class="container">
<span class="field-label"></span>
<slot class="prefix" name="prefix"></slot>
<slot class="light"></slot>
<slot class="postfix" name="postfix"></slot>
</label>`,L=`<div class="container">
<span class="field-label"></span>
<label class="option">
    <slot class="prefix" name="prefix"></slot>
    <slot class="light"></slot>
    <slot class="postfix" name="postfix"></slot>
    <span class="label"></span>
</label>
</div>`,T="form-field",S=class c extends HTMLElement{static parser=new DOMParser;static singleTemplateDOM;static groupTemplateDOM;constructor(){super()}renderIntoTemplate(){if(this.hasAttribute("initialized"))return;let t=this.getAttribute("input-selector")||"input,select,textarea",f=[...this.querySelectorAll(t)],n=this.querySelector('[slot="prefix"]');n?.remove();let l=this.querySelector('[slot="postfix"]');if(l?.remove(),f.length>1){c.groupTemplateDOM==null&&(c.groupTemplateDOM=c.parser.parseFromString(L,"text/html"));let o=[...this.querySelectorAll(t)],e=[...this.querySelectorAll(`:scope > :not(${t})`)];this.innerHTML="",this.classList.add("group");let u=c.groupTemplateDOM.querySelector(".container").cloneNode(!0);this.append(u);let h=this.querySelector(".container"),r=this.querySelector(".option");r.remove();for(let a=0;a<o.length;a++){let A=r.cloneNode(!0);h.append(A);let x=this.querySelector(".light"),y=this.getLabel(o[a]);if(x.parentElement.querySelector(".label").textContent=y,n!=null){let b=[...this.querySelectorAll(".prefix")];for(let d=0;d<b.length;d++){let m=b[d],g=n.cloneNode(!0);g.classList.add("prefix"),m.parentElement.replaceChild(g,m)}}if(x.parentElement.replaceChild(o[a],x),l!=null){let b=[...this.querySelectorAll(".postfix")];for(let d=0;d<b.length;d++){let m=b[d],g=l.cloneNode(!0);g.classList.add("postfix"),m.parentElement.replaceChild(g,m)}}}this.append(...e)}else{c.singleTemplateDOM==null&&(c.singleTemplateDOM=c.parser.parseFromString(M,"text/html"));let o=c.singleTemplateDOM.querySelector(".container"),e=this.querySelector(t);if(e==null&&(e=document.createElement("input"),e.placeholder=this.getAttribute("placeholder")??"",e.value=this.getAttribute("value")??""),e!=null){let s=[...this.querySelectorAll(`:scope > :not(${t})`)];this.append(o.cloneNode(!0));let u=this.querySelector(".postfix"),h=this.querySelector(".prefix"),r=this.querySelector(".light");n!=null&&h!=null&&(n.classList.add("prefix"),h.parentElement.replaceChild(n,h)),r.parentElement.replaceChild(e,r),l!=null&&u!=null&&(l.classList.add("postfix"),u.parentElement.replaceChild(l,u)),this.append(...s)}}let i=this.getAttribute("label"),p=this.querySelector(".field-label");if(p!=null&&i!=null)if(this.hasAttribute("optional")){let o=this.getAttribute("optional-title"),e=[...this.querySelectorAll(t)],s=document.createElement("input");s.type="checkbox",s.classList.add("enabled-checkbox"),o!=null&&s.setAttribute("title",o),s.addEventListener("change",()=>{this.setAttribute("optional-value",s.checked==!0?"true":"false");for(let r=0;r<e.length;r++){let a=e[r];s.checked==!0?a.removeAttribute("disabled"):a.toggleAttribute("disabled",!0)}});let u=document.createElement("span");u.textContent=i,p.append(s,u);let h=this.getAttribute("optional-value")=="true";s.checked=h;for(let r=0;r<e.length;r++){let a=e[r];s.checked==!0?a.removeAttribute("disabled"):a.setAttribute("disabled","disabled")}}else p.textContent=i;this.toggleAttribute("initialized",!0)}getLabel(t){if(t.dataset.label!=null)return t.dataset.label;let f=t.getAttribute("value")??"";return c.toTitleCase(f)}static toTitleCase(t){return t.substring(0,1).toUpperCase()+t.replace(/([A-Z]+)/g," $1").replace(/-([A-Za-z])/g," $1").replace(/([A-Z][a-z])/g," $1").replace(/ ([a-z])/g,f=>`${f.toUpperCase()}`).substring(1).trim()}static observedAttributes=["label","value","placeholder","optional-value","disabled"];attributeChangedCallback(t,f,n){if(t=="label"){let l=this.querySelector(".field-label");l!=null&&(l.textContent=n)}else if(t=="value"){let l=this.getAttribute("input-selector")||"input,select,textarea",i=[...this.querySelectorAll(l)];if(i.length>1||i.length==1&&i[0].classList.contains("enabled-checkbox"))return;i[0].value=n}else if(t=="optional-value"){let l=this.querySelector(".enabled-checkbox"),i=n=="true";l!=null&&(l.checked=i)}else if(t=="disabled"){let l=n!=null,i=this.getAttribute("input-selector")||"input,select,textarea",p=[...this.querySelectorAll(i)];for(let e=0;e<p.length;e++){let s=p[e];s.classList.contains("enabled-checkbox")||(l?s.toggleAttribute("disabled",!0):s.removeAttribute("disabled"))}let o=this.querySelector(".enabled-checkbox");o!=null&&(o.checked=!l)}else if(t=="placeholder"){let l=n!=null,i=this.getAttribute("input-selector")||"input,select,textarea",p=[...this.querySelectorAll(i)];for(let e=0;e<p.length;e++){let s=p[e];s.classList.contains("enabled-checkbox")||(s.placeholder=n)}let o=this.querySelector(".enabled-checkbox");o!=null&&(o.checked=!l)}}connectedCallback(){this.getRootNode().adoptedStyleSheets.push(E),this.renderIntoTemplate()}};customElements.get(T)==null&&customElements.define(T,S);export{S as FormFieldElement};
