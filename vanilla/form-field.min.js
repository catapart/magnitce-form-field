var A=new CSSStyleSheet;A.replaceSync("form-field { display: var(--form-field-display, contents) }");var M=`<label class="container">
<span class="field-label"></span>
<slot class="prefix" name="prefix"></slot>
<slot class="light"></slot>
<slot class="postfix" name="postfix"></slot>
</label>`,y=`<div class="container">
<span class="field-label"></span>
<label class="option">
    <slot class="prefix" name="prefix"></slot>
    <slot class="light"></slot>
    <slot class="postfix" name="postfix"></slot>
    <span class="label"></span>
</label>
</div>`,T="form-field",S=class p extends HTMLElement{static parser=new DOMParser;static singleTemplateDOM;static groupTemplateDOM;constructor(){super()}renderIntoTemplate(){if(this.hasAttribute("initialized"))return;let t=this.getAttribute("input-selector")||"input,select,textarea",f=[...this.querySelectorAll(t)].filter(l=>!l.classList.contains("enabled-checkbox")),o=this.querySelector('[slot="prefix"]');o?.remove();let e=this.querySelector('[slot="postfix"]');if(e?.remove(),f.length>1){p.groupTemplateDOM==null&&(p.groupTemplateDOM=p.parser.parseFromString(y,"text/html"));let l=[...this.querySelectorAll(t)],n=[...this.querySelectorAll(`:scope > :not(${t})`)];this.innerHTML="",this.classList.add("group");let u=p.groupTemplateDOM.querySelector(".container").cloneNode(!0);this.append(u);let h=this.querySelector(".container"),a=this.querySelector(".option");a.remove();for(let c=0;c<l.length;c++){let E=a.cloneNode(!0);h.append(E);let x=this.querySelector(".light"),L=this.getLabel(l[c]);if(x.parentElement.querySelector(".label").textContent=L,o!=null){let b=[...this.querySelectorAll(".prefix")];for(let d=0;d<b.length;d++){let m=b[d],g=o.cloneNode(!0);g.classList.add("prefix"),m.parentElement.replaceChild(g,m)}}if(x.parentElement.replaceChild(l[c],x),e!=null){let b=[...this.querySelectorAll(".postfix")];for(let d=0;d<b.length;d++){let m=b[d],g=e.cloneNode(!0);g.classList.add("postfix"),m.parentElement.replaceChild(g,m)}}}this.append(...n)}else{p.singleTemplateDOM==null&&(p.singleTemplateDOM=p.parser.parseFromString(M,"text/html"));let l=p.singleTemplateDOM.querySelector(".container"),n=this.querySelector(t);if(n==null&&(n=document.createElement("input"),n.placeholder=this.getAttribute("placeholder")??"",n.value=this.getAttribute("value")??"",n.name=this.getAttribute("name")??""),n!=null){let i=[...this.querySelectorAll(`:scope > :not(${t})`)];this.append(l.cloneNode(!0));let u=this.querySelector(".postfix"),h=this.querySelector(".prefix"),a=this.querySelector(".light");o!=null&&h!=null&&(o.classList.add("prefix"),h.parentElement.replaceChild(o,h)),a.parentElement.replaceChild(n,a),e!=null&&u!=null&&(e.classList.add("postfix"),u.parentElement.replaceChild(e,u)),this.append(...i)}}let s=this.getAttribute("label"),r=this.querySelector(".field-label");if(r!=null&&s!=null)if(this.hasAttribute("optional")){let l=this.getAttribute("optional-title"),n=[...this.querySelectorAll(t)],i=document.createElement("input");i.type="checkbox",i.classList.add("enabled-checkbox"),l!=null&&i.setAttribute("title",l),i.addEventListener("change",()=>{this.setAttribute("optional-value",i.checked==!0?"true":"false");for(let a=0;a<n.length;a++){let c=n[a];i.checked==!0?c.removeAttribute("disabled"):c.toggleAttribute("disabled",!0)}});let u=document.createElement("span");u.textContent=s,r.append(i,u);let h=this.getAttribute("optional-value")=="true";i.checked=h;for(let a=0;a<n.length;a++){let c=n[a];i.checked==!0?c.removeAttribute("disabled"):c.setAttribute("disabled","disabled")}}else r.textContent=s;this.toggleAttribute("initialized",!0)}getLabel(t){if(t.dataset.label!=null)return t.dataset.label;let f=t.getAttribute("value")??"";return p.toTitleCase(f)}static toTitleCase(t){return t.substring(0,1).toUpperCase()+t.replace(/([A-Z]+)/g," $1").replace(/-([A-Za-z])/g," $1").replace(/([A-Z][a-z])/g," $1").replace(/ ([a-z])/g,f=>`${f.toUpperCase()}`).substring(1).trim()}static observedAttributes=["label","value","placeholder","name","optional-value","disabled"];attributeChangedCallback(t,f,o){if(t=="label"){let e=this.querySelector(".field-label");e!=null&&(e.textContent=o)}else if(t=="value"){let e=this.getAttribute("input-selector")||"input,select,textarea",s=[...this.querySelectorAll(e)];if(s.length>1||s.length==1&&s[0].classList.contains("enabled-checkbox"))return;s[0].value=o}else if(t=="optional-value"){let e=this.querySelector(".enabled-checkbox"),s=o=="true";e!=null&&(e.checked=s)}else if(t=="disabled"){let e=o!=null,s=this.getAttribute("input-selector")||"input,select,textarea",r=[...this.querySelectorAll(s)];for(let n=0;n<r.length;n++){let i=r[n];i.classList.contains("enabled-checkbox")||(e?i.toggleAttribute("disabled",!0):i.removeAttribute("disabled"))}let l=this.querySelector(".enabled-checkbox");l!=null&&(l.checked=!e)}else if(t=="placeholder"){let e=this.getAttribute("input-selector")||"input,select,textarea",s=[...this.querySelectorAll(e)];for(let r=0;r<s.length;r++){let l=s[r];l.classList.contains("enabled-checkbox")||(l.placeholder=o)}}else if(t=="name"){let e=this.getAttribute("input-selector")||"input,select,textarea",s=[...this.querySelectorAll(e)];for(let r=0;r<s.length;r++){let l=s[r];l.classList.contains("enabled-checkbox")||(l.name=o)}}}connectedCallback(){this.getRootNode().adoptedStyleSheets.push(A),this.renderIntoTemplate()}};customElements.get(T)==null&&customElements.define(T,S);export{S as FormFieldElement};
